//! DO NOT EDIT: This file is auto-generated by ftl_idlc.
#![no_std]

pub use ftl_autogen::*;

pub mod apps {
    {% for app in apps %}
    pub mod {{ app.name }} {
        pub enum Message<'a> {
            {%- for m in app.used_messages %}
            {{ m.camel_name }}({{ m.ty }}Reader<'a>),
            {%- endfor %}
        }

        impl<'a> ::core::fmt::Debug for Message<'a> {
            fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
                match self {
                    {%- for m in app.used_messages %}
                    Self::{{ m.camel_name }}(_) => write!(f, "{{ m.camel_name }}"),
                    {%- endfor %}
                }
            }
        }

        use ftl_types::message::MessageSerialize;
        use ftl_types::message::MessageDeserialize;
        use ftl_types::message::MessageInfo;
        use ftl_types::message::MessageBuffer;

        impl<'b> MessageDeserialize for Message<'b> {
            type Reader<'a> = Message<'a>;

            fn deserialize<'a>(
                buffer: &'a MessageBuffer,
                msginfo: MessageInfo
            ) -> Option<Self::Reader<'a>> {
                match msginfo {
                    {% for m in app.used_messages %}
                    {{ m.ty }}::MSGINFO => {
                        use {{ m.ty }} as M;

                        let reader = M::deserialize(buffer, msginfo)?;
                        Some(Message::{{ m.camel_name }}(reader))
                    },
                    {% endfor %}
                    _ => None,
                }
            }
        }
    }
    {% endfor %}
}
