name: CI

on:
  push:
  pull_request:
    branches:
      - main

# No permissions allowed by default. Specify explicitly in each job.
permissions: {}

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust
      run: |
        rustup toolchain install nightly
        rustup default nightly
        rustup component add rust-src rustfmt

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          build/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Format check
      run: |
        make fmt
        git diff --exit-code

    - name: Permission
      run: |
        curl -sSfL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com | grep "x-oauth-scopes:"

  build-debug:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust
      run: |
        rustup toolchain install nightly
        rustup default nightly
        rustup target add riscv64gc-unknown-none-elf
        rustup component add rust-src llvm-tools

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Cache build artifacts
      uses: actions/cache@v4
      with:
        path: build
        key: ${{ runner.os }}-build-${{ hashFiles('**/*.rs', '**/Cargo.toml', '**/Cargo.lock', 'Makefile') }}

    - name: Build
      run: make ARCH=riscv64 MACHINE=qemu-virt

  build-release:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust
      run: |
        rustup toolchain install nightly
        rustup default nightly
        rustup target add riscv64gc-unknown-none-elf
        rustup component add rust-src llvm-tools

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          build/target
        key: ${{ runner.os }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-release-

    - name: Cache build artifacts
      uses: actions/cache@v4
      with:
        path: build
        key: ${{ runner.os }}-build-release-${{ hashFiles('**/*.rs', '**/Cargo.toml', '**/Cargo.lock', 'Makefile') }}

    - name: Build Release
      run: make ARCH=riscv64 MACHINE=qemu-virt RELEASE=1
